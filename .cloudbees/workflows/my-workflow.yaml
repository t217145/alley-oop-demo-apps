apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My workflow
on:
  # push:
  #   branches:
  #     - "**"
  workflow_dispatch:
    inputs:
      repo_name:
        type: string
        default: t217145/alley-oop-demo-apps
        required: true
        description: Repository Name (do not include the https://github.com/) E.g. t217145/alley-oop-demo-apps
      repo_url:
        type: string
        default: https://github.com/
        description: Repository URL. Default is https://github.com
      # suppose to read the jenkins.properties
      appVersion:
        type: string
        default: "1.0"
        description: Application version, suppose to read the jenkins.properties    
      appName:
        type: string
        default: "demo-app"
        description: Application name, suppose to read the jenkins.properties  

jobs:
  Compile:
    environment: sandbox
    outputs:
      output-critical: ${{ steps.sonarscan.outputs.critical-count }}
      output-very-high: ${{ steps.sonarscan.outputs.very-high-count }}
      output-high: ${{ steps.sonarscan.outputs.high-count }}
      output-medium: ${{ steps.sonarscan.outputs.medium-count }}
      output-low: ${{ steps.sonarscan.outputs.low-count }}		
    steps:
      - uses: cloudbees-io/checkout@v1
        name: checkout
        with:
          provider: github
          repository: ${{ inputs.repo_name }}
          ref: main
          token: ${{secrets.GITHUB_TOKEN}}
          path: ./app
          github-server-url: ${{ inputs.repo_url }} 
      - name: SonarCloud
        uses: https://github.com/cloudbees-io/sonarqube-sast-scan-code@v1
        with:
          server-url: https://sonarcloud.io/
          access-token: ${{ secrets.SONARQUBE_TOKEN }}
          language: "LANGUAGE_JAVA"
      - id: sonarscan
        name: Scan with SonarQube bundled
        uses: https://github.com/cloudbees-io/sonarqube-bundled-sast-scan-code@v2
        with:
          language: LANGUAGE_JAVA
      - id: print-sonarqube-result
        name: Print SonarQube Result
        uses: docker://alpine:latest
        run: |
            echo "Outputs from upstream SonarQube step:"
            echo "Critical Count: ${{steps.sonarscan.outputs.critical-count}}"
            echo "Very High Count: ${{steps.sonarscan.outputs.very-high-count}}"
            echo "High Count: ${{steps.sonarscan.outputs.high-count}}"
            echo "Medium Count: ${{steps.sonarscan.outputs.medium-count}}"
            echo "Low Count: ${{steps.sonarscan.outputs.low-count}}"